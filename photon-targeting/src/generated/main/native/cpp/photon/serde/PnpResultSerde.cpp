/*
 * MIT License
 *
 * Copyright (c) PhotonVision
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

// THIS FILE WAS AUTO-GENERATED BY ./photon-serde/generate_messages.py. DO NOT MODIFY

#include "photon/serde/PnpResultSerde.h"

namespace photon {

using StructType = SerdeType<PnpResult>;

void StructType::Pack(Packet& packet, const PnpResult& value) {
  packet.Pack<frc::Transform3d>(value.best);
  packet.Pack<frc::Transform3d>(value.alt);
  packet.Pack<double>(value.bestReprojErr);
  packet.Pack<double>(value.altReprojErr);
  packet.Pack<double>(value.ambiguity);
}

PnpResult StructType::Unpack(Packet& packet) {
  return PnpResult{ PnpResult_PhotonStruct{
    .best = packet.Unpack<frc::Transform3d>(),
    .alt = packet.Unpack<frc::Transform3d>(),
    .bestReprojErr = packet.Unpack<double>(),
    .altReprojErr = packet.Unpack<double>(),
    .ambiguity = packet.Unpack<double>(),
  }};
}

} // namespace photon
