/*
 * MIT License
 *
 * Copyright (c) PhotonVision
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

syntax = "proto3";

package photonvision.proto;

import "geometry3d.proto";

option java_package = "org.photonvision.proto";

message ProtobufTargetCorner {
  double x = 1;
  double y = 2;
}

message ProtobufPNPResult {
  wpi.proto.ProtobufTransform3d best = 2;
  double best_reproj_err = 3;
  optional wpi.proto.ProtobufTransform3d alt = 4;
  optional double alt_reproj_err = 5;
  double ambiguity = 6;
}

message ProtobufMultiTargetPNPResult {
  ProtobufPNPResult estimated_pose = 1;
  repeated int32 fiducial_ids_used = 2;
}

message ProtobufPhotonTrackedTarget {
  double yaw = 1;
  double pitch = 2;
  double area = 3;
  double skew = 4;
  int32 fiducial_id = 5;
  wpi.proto.ProtobufTransform3d best_camera_to_target = 6;
  wpi.proto.ProtobufTransform3d alt_camera_to_target = 7;
  double pose_ambiguity = 8;
  repeated ProtobufTargetCorner min_area_rect_corners = 9;
  repeated ProtobufTargetCorner detected_corners = 10;

  int32 obj_detection_id = 11;
  float obj_detection_conf = 12;
}

message ProtobufPhotonPipelineResult {
  double latency_ms = 1 [deprecated = true];

  repeated ProtobufPhotonTrackedTarget targets = 2;
  optional ProtobufMultiTargetPNPResult multi_target_result = 3;

  int64 sequence_id = 4;
  int64 capture_timestamp_micros = 5;
  int64 nt_publish_timestamp_micros = 6;
  int64 time_since_last_pong_micros = 7;
}

message ProtobufDeviceMetrics {
  double cpu_temp = 1;
  double cpu_util = 2;
  string cpu_thr = 3;
  double ram_mem = 4;
  double ram_util = 5;
  double gpu_mem = 6;
  double gpu_mem_util = 7;
  double disk_util_pct = 8;
  repeated double npu_usage = 9;
  string ip_address = 10;
  double uptime = 11;
}
