plugins {
    id "com.diffplug.spotless" version "6.1.2"
    id "com.github.johnrengelman.shadow" version "7.1.2"
    id "com.github.node-gradle.node" version "3.1.1" apply false
    id "edu.wpi.first.GradleJni" version "1.0.0"
    id "edu.wpi.first.GradleVsCode" version "1.1.0"
    id "edu.wpi.first.NativeUtils" version "2023.11.1" apply false
    id "edu.wpi.first.wpilib.repositories.WPILibRepositoriesPlugin" version "2020.2"
    id "org.hidetake.ssh" version "2.10.1"
    id 'edu.wpi.first.WpilibTools' version '1.0.0'
}

import org.gradle.api.internal.artifacts.dependencies.DefaultExternalModuleDependency;

allprojects {
    repositories {
        mavenCentral()
        mavenLocal()
        maven { url = "https://maven.photonvision.org/repository/internal/" }
    }
    wpilibRepositories.addAllReleaseRepositories(it)
    wpilibRepositories.addAllDevelopmentRepositories(it)
}

// Configure the version number.
apply from: "versioningHelper.gradle"

ext {
    wpilibVersion = "2023.4.2"
    opencvVersion = "4.6.0-4"
    joglVersion = "2.4.0-rc-20200307"
    pubVersion = versionString
    isDev = pubVersion.startsWith("dev")

    // A list, for legacy reasons, with only the current platform contained
    String nativeName = wpilibTools.platformMapper.currentPlatform.platformName;
    if (nativeName == "linuxx64") nativeName = "linuxx86-64";
    if (nativeName == "winx64") nativeName = "windowsx86-64";
    if (nativeName == "macx64") nativeName = "osxx86-64";
    if (nativeName == "macarm64") nativeName = "osxarm64";
    jniPlatform = nativeName
    println("Building for platform " + jniPlatform)
}

wpilibTools.deps.wpilibVersion = wpilibVersion

spotless {
    java {
        toggleOffOn()
        googleJavaFormat()
        indentWithTabs(2)
        indentWithSpaces(4)
        removeUnusedImports()
        trimTrailingWhitespace()
        endWithNewline()
    }
    java {
        target "**/*.java"
        targetExclude("photon-core/src/main/java/org/photonvision/PhotonVersion.java")
        targetExclude("photon-lib/src/main/java/org/photonvision/PhotonVersion.java")
    }
}
