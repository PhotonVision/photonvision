import java.nio.file.Path

apply from: "${rootDir}/shared/common.gradle"

dependencies {
    // JOGL stuff (currently we only distribute for aarch64, which is Pi 4)
    implementation "org.jogamp.gluegen:gluegen-rt:$joglVersion"
    implementation "org.jogamp.jogl:jogl-all:$joglVersion"
    implementation "org.jogamp.gluegen:gluegen-rt:$joglVersion:natives-linux-aarch64"
    implementation "org.jogamp.jogl:jogl-all:$joglVersion:natives-linux-aarch64"

    // Zip
    implementation 'org.zeroturnaround:zt-zip:1.14'

    implementation "org.xerial:sqlite-jdbc:3.41.0.0"

    implementation "org.photonvision:photon-libcamera-gl-driver-jni:$photonGlDriverLibVersion:linuxarm64"
    implementation "org.photonvision:photon-libcamera-gl-driver-java:$photonGlDriverLibVersion"

    implementation "org.photonvision:photon-mrcal-java:$mrcalVersion"

    // Only include mrcal natives on platforms that we build for
    if (!(jniPlatform in [
                "osxx86-64",
                "osxarm64",
                "linuxarm32"
            ])) {
        implementation "org.photonvision:photon-mrcal-jni:$mrcalVersion:$wpilibNativeName"
    }

    testImplementation group: 'org.junit-pioneer' , name: 'junit-pioneer', version: '2.2.0'
}

task writeCurrentVersion {
    def versionFileIn = file("${rootDir}/shared/PhotonVersion.java.in")
    writePhotonVersionFile(versionFileIn, Path.of("$projectDir", "src", "main", "java", "org", "photonvision", "PhotonVersion.java"),
            versionString)
}

build.dependsOn writeCurrentVersion
