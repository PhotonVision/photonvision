plugins {
    id 'edu.wpi.first.WpilibTools' version '1.0.0'
}

import java.nio.file.Path

apply from: "${rootDir}/shared/common.gradle"

dependencies {
    implementation project(':photon-targeting')

    implementation 'io.javalin:javalin:4.2.0'

    implementation 'org.msgpack:msgpack-core:0.9.0'
    implementation 'org.msgpack:jackson-dataformat-msgpack:0.9.0'

    // JOGL stuff (currently we only distribute for aarch64, which is Pi 4)
    implementation "org.jogamp.gluegen:gluegen-rt:$joglVersion"
    implementation "org.jogamp.jogl:jogl-all:$joglVersion"

    implementation "org.jogamp.gluegen:gluegen-rt:$joglVersion:natives-linux-aarch64"
    implementation "org.jogamp.jogl:jogl-all:$joglVersion:natives-linux-aarch64"

    // Zip
    implementation 'org.zeroturnaround:zt-zip:1.14'

    // ZeroMQ
    implementation 'org.zeromq:jeromq:0.5.3'

    implementation wpilibTools.deps.wpilibJava("apriltag")
}

task writeCurrentVersionJava {
    def versionFileIn = file("${rootDir}/shared/PhotonVersion.java.in")
    writePhotonVersionFile(versionFileIn, Path.of("$projectDir", "src", "main", "java", "org", "photonvision", "PhotonVersion.java"),
            versionString)
}

build.dependsOn writeCurrentVersionJava

def testNativeConfigName = 'wpilibTestNative'
def testNativeConfig = configurations.create(testNativeConfigName)

def folder = project.layout.buildDirectory.dir('NativeTest')

def testNativeTasks = wpilibTools.createExtractionTasks {
    taskPostfix = "Test"
    configurationName = testNativeConfigName
    rootTaskFolder.set(folder)
}

testNativeTasks.addToSourceSetResources(sourceSets.test)

testNativeConfig.dependencies.add wpilibTools.deps.cscore()
testNativeConfig.dependencies.add wpilibTools.deps.wpilib("ntcore")
testNativeConfig.dependencies.add wpilibTools.deps.wpilib("wpinet")
testNativeConfig.dependencies.add wpilibTools.deps.wpilib("hal")
testNativeConfig.dependencies.add wpilibTools.deps.wpilib("wpiutil")
testNativeConfig.dependencies.add wpilibTools.deps.wpilib("apriltag")
testNativeConfig.dependencies.add wpilibTools.deps.wpilib("wpimath")
