apply plugin: "cpp"
apply plugin: "java"
apply plugin: "google-test-test-suite"
apply plugin: "edu.wpi.first.NativeUtils"

apply from: "${rootDir}/shared/config.gradle"

test {
    useJUnitPlatform()
}

// Apply Java configuration
dependencies {
    compile project(":photon-core")
    compile project(":photon-targeting")

    implementation "edu.wpi.first.cscore:cscore-java:$wpilibVersion"
    implementation "edu.wpi.first.cameraserver:cameraserver-java:$wpilibVersion"
    implementation "edu.wpi.first.wpilibj:wpilibj-java:$wpilibVersion"
    implementation "edu.wpi.first.wpiutil:wpiutil-java:$wpilibVersion"
    implementation "edu.wpi.first.wpimath:wpimath-java:$wpilibVersion"
    implementation "edu.wpi.first.hal:hal-java:$wpilibVersion"
    implementation "edu.wpi.first.thirdparty.frc2020.opencv:opencv-java:3.4.7-2"
    implementation "edu.wpi.first.ntcore:ntcore-java:$wpilibVersion"

    testImplementation("org.junit.jupiter:junit-jupiter-api:5.6.2")
    testImplementation("org.junit.jupiter:junit-jupiter-params:5.6.2")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.6.2")
}

// Set up exports properly
nativeUtils {
    exportsConfigs {
        // Main library is just default empty. This will export everything
        Photon {
        }
    }
}

model {
    components {
        Photon(NativeLibrarySpec) {
            sources {
                cpp {
                    source {
                        srcDirs "src/main/native/cpp"
                        include "**/*.cpp"
                    }
                    exportedHeaders {
                        srcDirs "src/main/native/include"
                    }
                }
            }
            nativeUtils.useRequiredLibrary(it, "wpilib_shared")
        }
    }
    testSuites {
        cppTest(GoogleTestTestSuiteSpec) {
            testing $.components.Photon

            sources.cpp {
                source {
                    srcDir "src/test/native/cpp"
                    include "**/*.cpp"
                }
            }

            nativeUtils.useRequiredLibrary(it, "wpilib_executable_shared")
            nativeUtils.useRequiredLibrary(it, "googletest_static")
        }
    }
}

def photonlibFileInput = file("src/generate/photonlib.json.in")
ext.photonlibFileOutput = file("$buildDir/generated/vendordeps/photonlib.json")

task generateVendorJson() {
    description = "Generates the vendor JSON file"
    group = "PhotonVision"

    outputs.file photonlibFileOutput
    inputs.file photonlibFileInput

    doLast {
        println "Writing version ${pubVersion} to $photonlibFileOutput"

        if (photonlibFileOutput.exists()) {
            photonlibFileOutput.delete()
        }
        def read = photonlibFileInput.text.replace('${photon_version}', pubVersion)
        photonlibFileOutput.write(read)
    }
}

build.dependsOn generateVendorJson

apply from: "publish.gradle"
